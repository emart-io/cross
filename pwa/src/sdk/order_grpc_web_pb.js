/**
 * @fileoverview gRPC-Web generated client stub for zwan
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.14.0
// source: order.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.zwan = require('./order_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.zwan.OrdersClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.zwan.OrdersPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'binary';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.zwan.Order,
 *   !proto.zwan.Order>}
 */
const methodDescriptor_Orders_Add = new grpc.web.MethodDescriptor(
  '/zwan.Orders/Add',
  grpc.web.MethodType.UNARY,
  proto.zwan.Order,
  proto.zwan.Order,
  /**
   * @param {!proto.zwan.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.zwan.Order.deserializeBinary
);


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.zwan.Order)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.zwan.Order>|undefined}
 *     The XHR Node Readable Stream
 */
proto.zwan.OrdersClient.prototype.add =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/zwan.Orders/Add',
      request,
      metadata || {},
      methodDescriptor_Orders_Add,
      callback);
};


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.zwan.Order>}
 *     Promise that resolves to the response
 */
proto.zwan.OrdersPromiseClient.prototype.add =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/zwan.Orders/Add',
      request,
      metadata || {},
      methodDescriptor_Orders_Add);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.zwan.Order,
 *   !proto.zwan.Order>}
 */
const methodDescriptor_Orders_Get = new grpc.web.MethodDescriptor(
  '/zwan.Orders/Get',
  grpc.web.MethodType.UNARY,
  proto.zwan.Order,
  proto.zwan.Order,
  /**
   * @param {!proto.zwan.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.zwan.Order.deserializeBinary
);


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.zwan.Order)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.zwan.Order>|undefined}
 *     The XHR Node Readable Stream
 */
proto.zwan.OrdersClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/zwan.Orders/Get',
      request,
      metadata || {},
      methodDescriptor_Orders_Get,
      callback);
};


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.zwan.Order>}
 *     Promise that resolves to the response
 */
proto.zwan.OrdersPromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/zwan.Orders/Get',
      request,
      metadata || {},
      methodDescriptor_Orders_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.zwan.Order,
 *   !proto.zwan.Order>}
 */
const methodDescriptor_Orders_Update = new grpc.web.MethodDescriptor(
  '/zwan.Orders/Update',
  grpc.web.MethodType.UNARY,
  proto.zwan.Order,
  proto.zwan.Order,
  /**
   * @param {!proto.zwan.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.zwan.Order.deserializeBinary
);


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.zwan.Order)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.zwan.Order>|undefined}
 *     The XHR Node Readable Stream
 */
proto.zwan.OrdersClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/zwan.Orders/Update',
      request,
      metadata || {},
      methodDescriptor_Orders_Update,
      callback);
};


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.zwan.Order>}
 *     Promise that resolves to the response
 */
proto.zwan.OrdersPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/zwan.Orders/Update',
      request,
      metadata || {},
      methodDescriptor_Orders_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.zwan.Order,
 *   !proto.zwan.Order>}
 */
const methodDescriptor_Orders_List = new grpc.web.MethodDescriptor(
  '/zwan.Orders/List',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.zwan.Order,
  proto.zwan.Order,
  /**
   * @param {!proto.zwan.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.zwan.Order.deserializeBinary
);


/**
 * @param {!proto.zwan.Order} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.zwan.Order>}
 *     The XHR Node Readable Stream
 */
proto.zwan.OrdersClient.prototype.list =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/zwan.Orders/List',
      request,
      metadata || {},
      methodDescriptor_Orders_List);
};


/**
 * @param {!proto.zwan.Order} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.zwan.Order>}
 *     The XHR Node Readable Stream
 */
proto.zwan.OrdersPromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/zwan.Orders/List',
      request,
      metadata || {},
      methodDescriptor_Orders_List);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.zwan.Order,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_Orders_Delete = new grpc.web.MethodDescriptor(
  '/zwan.Orders/Delete',
  grpc.web.MethodType.UNARY,
  proto.zwan.Order,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.zwan.Order} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.zwan.OrdersClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/zwan.Orders/Delete',
      request,
      metadata || {},
      methodDescriptor_Orders_Delete,
      callback);
};


/**
 * @param {!proto.zwan.Order} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.zwan.OrdersPromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/zwan.Orders/Delete',
      request,
      metadata || {},
      methodDescriptor_Orders_Delete);
};


module.exports = proto.zwan;

